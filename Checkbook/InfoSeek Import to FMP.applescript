(*InfoSeek Import to FMPDavid GaxiolaInfoSeek was an early web search engine in the days before Google.The Checkbook project needed a database of websites to pull from.  The quick and dirty solution was to manually do some searches, save the page results from InfoSeek and then perform basic processing to extract out URLs and link names.This is a pretty good example of what AppleScript was useful for: tying together several different programs that otherwise had no way to interact.*)property database_name : "Path:To:Database:Final Project Sites"-- on add2db--   site_name - Name of the link to add.--   site_url - The URL of the link to add.-- Step 3: Add the URL to the local database.on add2db(site_name, site_url)	tell application "FileMaker Pro 2.1"		activate --Make sure FileMaker Pro is running, in the foreground		Open database_name --Make sure the proper document is open as well				Create New Record With Data {site_name, site_url, ""} --tell FMPro to make a record with the new data	end tellend add2db-- on grabAndConvert--   foundHREF - HREF HTML to further process.-- Step 2: Trim out the URL and name of the link and add it to the local database.on grabAndConvert(foundHREF)	-- Unfortunately, it seems as though I used some OSAX for quick string maniuplation.	-- This OSAX is long gone and some searching didn't produce anything useful.	-- The event and class names give an indication of what's happening so it's possible 	-- to construct helper routines if you really want to get this working.	set foundHREF to «event WaynTrim» {"<dt><a href=\""} given «class tOFF»:foundHREF, «class from»:«constant eENDfrnt»	set foundHREF to «event WaynTrim» {"</a><dd>"} given «class tOFF»:foundHREF, «class from»:«constant eENDback»	set divisionOffset to offset of "\">" in foundHREF	set foundHREFLength to number of characters of foundHREF	set site_url to (characters 1 thru (divisionOffset - 1) of foundHREF) as string	set site_name to (characters (divisionOffset + 2) thru foundHREFLength of foundHREF) as string	add2db(site_url, site_name)end grabAndConvert-- on addDocHREFs--   tDoc - The current document to search through.-- Step 1: Processes an InfoSeek search results page and extracts out result links.on addDocHREFs(tDoc)	-- Amazingly, Word 6 had good AppleScript support so it's used to search through 	-- the InfoSeek results page and extract out the important links.	-- We leverage Word 6's built in VBScript functionality for the heavy lifting.	tell application "Microsoft Word"		activate		open tDoc		do script "StartOfDocument"		set notEOD to true		repeat while notEOD			try				do script "EditFind .Find = \"\\<dt\\>\\<a href=\" + Chr$(34) + \"*\" + Chr$(34) + \"\\>*\\</a\\>\\<dd\\>\", .Direction = 0, .MatchCase = 0, .WholeWord = 0, .PatternMatch = 1, .SoundsLike = 0, .Format = 0, .Wrap = 2"				set foundText to the selection as text				tell me to grabAndConvert(foundText)			on error errName				set notEOD to false			end try		end repeat		do script "StartOfDocument"		close document (tDoc as text) saving no	end tellend addDocHREFs-- on open-- Parse through the provided InfoSeek search result pages -- and add the extracted links to a local database.on open (docList)	repeat with tDoc in docList		addDocHREFs((tDoc as alias))	end repeatend open